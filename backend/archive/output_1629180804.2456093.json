{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 16}, "tests": {"0": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_login_url", "rerun": "0"}, "1": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_reset_password_url", "rerun": "0"}, "2": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_update_password_url", "rerun": "0"}, "3": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_new_password_url", "rerun": "0"}, "4": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_logout_url", "rerun": "0"}, "5": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_check_token_url", "rerun": "0"}, "6": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_download_file_url", "rerun": "0"}, "7": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_create_role_url", "rerun": "0"}, "8": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_get_role_url", "rerun": "0"}, "9": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_register_user_url", "rerun": "0"}, "10": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_register_worker_url", "rerun": "0"}, "11": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_register_access_url", "rerun": "0"}, "12": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_edit_user_url", "rerun": "0"}, "13": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_edit_user_byid_url", "rerun": "0"}, "14": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_deactivate_user_url", "rerun": "0"}, "15": {"status": "ERROR", "message": "@pytest.fixture(autouse=True)\n    def setup_company():\n    \tcompany ={\"name\": \"Administrator\",\n    \t\t\t\"created_by\": 1,\"updated_by\": 1,}\n>   \tcompany[\"created_by\"] = Users.objects.filter(id=company[\"created_by\"])[0]\n\nusermanagement\\Test_Usermanagement\\conftest.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:317: in __getitem__\n    qs._fetch_all()\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1324: in _fetch_all\n    self._result_cache = list(self._iterable_class(self))\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:51: in __iter__\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\n..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1173: in execute_sql\n    cursor = self.connection.cursor()\n..\\mmtxt\\lib\\site-packages\\django\\utils\\asyncio.py:26: in inner\n    return func(*args, **kwargs)\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:259: in cursor\n    return self._cursor()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001F8AEA53A08>, name = None\n\n    def _cursor(self, name=None):\n>       self.ensure_connection()\nE       RuntimeError: Database access not allowed, use the \"django_db\" mark, or the \"db\" or \"transactional_db\" fixtures to enable it.\n\n..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\base\\base.py:235: RuntimeError\n", "test_name": "test_list_user_byemail_url", "rerun": "0"}}, "suite_name": "usermanagement/Test_Usermanagement/test_urls.py"}}}, "date": "August 17, 2021", "start_time": 1629180582.379069, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "16", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "16"}