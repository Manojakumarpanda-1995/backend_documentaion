{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}, "tests": {"0": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x0000029048B2C788>\nsql = 'INSERT INTO \"Users\" (\"first_name\", \"last_name\", \"name\", \"email\", \"password\", \"token\", \"designation\", \"active\", \"user_...email\", \"hashkey\", \"created_at\", \"updated_at\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['test', 'user1', None, 'testuser1@momenttext.com', '8c8dc5ced8f13d767526c4621e060f8e1eb8872ada3be5ca984f8b1ae478917f', 'e88a9259-078d-4793-b84a-614a1c7ef824', ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x0000029046692D48>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x0000029048B2C788>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x0000029048B444C8>\nquery = 'INSERT INTO \"Users\" (\"first_name\", \"last_name\", \"name\", \"email\", \"password\", \"token\", \"designation\", \"active\", \"user_...porting_manager_email\", \"hashkey\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['test', 'user1', None, 'testuser1@momenttext.com', '8c8dc5ced8f13d767526c4621e060f8e1eb8872ada3be5ca984f8b1ae478917f', 'e88a9259-078d-4793-b84a-614a1c7ef824', ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: UNIQUE constraint failed: Users.email\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture\n    def setup_saved_user():\n    \tusers=[\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user1\",\"email\":\"testuser1@momenttext.com\",\"active\":True\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t},\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user2\",\"email\":\"testuser2@momenttext.com\",\"active\":True\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t},\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user3\",\"email\":\"testuser3@momenttext.com\",\"active\":True\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t},\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user4\",\"email\":\"testuser4@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":True,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user5\",\"email\":\"testuser5@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":True,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user6\",\"email\":\"testuser6@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":True,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user1\",\"email\":\"testuser7@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user1\",\"email\":\"testuser8@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t]\n    \totp=\"\"\n    \tfor obj in users:\n>   \t\tgetUsers=Users.objects.create(**obj)\n\n..\\..\\conftest.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x0000029048B444C8>\nquery = 'INSERT INTO \"Users\" (\"first_name\", \"last_name\", \"name\", \"email\", \"password\", \"token\", \"designation\", \"active\", \"user_...porting_manager_email\", \"hashkey\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['test', 'user1', None, 'testuser1@momenttext.com', '8c8dc5ced8f13d767526c4621e060f8e1eb8872ada3be5ca984f8b1ae478917f', 'e88a9259-078d-4793-b84a-614a1c7ef824', ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: UNIQUE constraint failed: Users.email\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_create_usercompanyrole[testuser1@momenttext.com-3-5-Company-Management]", "rerun": "0"}, "1": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x0000029048989108>\nsql = 'INSERT INTO \"Users\" (\"first_name\", \"last_name\", \"name\", \"email\", \"password\", \"token\", \"designation\", \"active\", \"user_...email\", \"hashkey\", \"created_at\", \"updated_at\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['test', 'user1', None, 'testuser1@momenttext.com', '8c8dc5ced8f13d767526c4621e060f8e1eb8872ada3be5ca984f8b1ae478917f', '49cfcb9d-1914-4243-9c81-16d73d1a9ad1', ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x0000029046692D48>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x0000029048989108>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x0000029049039CA8>\nquery = 'INSERT INTO \"Users\" (\"first_name\", \"last_name\", \"name\", \"email\", \"password\", \"token\", \"designation\", \"active\", \"user_...porting_manager_email\", \"hashkey\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['test', 'user1', None, 'testuser1@momenttext.com', '8c8dc5ced8f13d767526c4621e060f8e1eb8872ada3be5ca984f8b1ae478917f', '49cfcb9d-1914-4243-9c81-16d73d1a9ad1', ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: UNIQUE constraint failed: Users.email\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\n    @pytest.fixture\n    def setup_saved_user():\n    \tusers=[\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user1\",\"email\":\"testuser1@momenttext.com\",\"active\":True\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t},\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user2\",\"email\":\"testuser2@momenttext.com\",\"active\":True\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t},\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user3\",\"email\":\"testuser3@momenttext.com\",\"active\":True\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t},\n    \t\t{\"first_name\":\"test\",\"last_name\":\"user4\",\"email\":\"testuser4@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":True,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user5\",\"email\":\"testuser5@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":True,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user6\",\"email\":\"testuser6@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":True,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user1\",\"email\":\"testuser7@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t\t,{\"first_name\":\"test\",\"last_name\":\"user1\",\"email\":\"testuser8@momenttext.com\",\"active\":False\n    \t\t,\"user_verified\":False,\"password\":generate_passwords(\"Password@123\"),\"token\":fake.uuid4()\n    \t\t   ,\"hashkey\":fake.uuid4()[:10],\n    \t\t}\n    \t]\n    \totp=\"\"\n    \tfor obj in users:\n>   \t\tgetUsers=Users.objects.create(**obj)\n\n..\\..\\conftest.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x0000029049039CA8>\nquery = 'INSERT INTO \"Users\" (\"first_name\", \"last_name\", \"name\", \"email\", \"password\", \"token\", \"designation\", \"active\", \"user_...porting_manager_email\", \"hashkey\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['test', 'user1', None, 'testuser1@momenttext.com', '8c8dc5ced8f13d767526c4621e060f8e1eb8872ada3be5ca984f8b1ae478917f', '49cfcb9d-1914-4243-9c81-16d73d1a9ad1', ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: UNIQUE constraint failed: Users.email\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_create_usercompanyrole[testuser1@momenttext.com-3-5-Project-Management]", "rerun": "0"}}, "suite_name": "organization/Test_organization/test_views.py"}}}, "date": "August 30, 2021", "start_time": 1630308560.1157353, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "2"}