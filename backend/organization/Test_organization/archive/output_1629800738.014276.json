{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 1}, "tests": {"0": {"status": "ERROR", "message": "setup_test_company = [{'active': False, 'address1': '32939 Jefferson Courts Suite 618\\nPort Gabrielview, NM 33273', 'city': 'Fishermouth', ...'address1': '02929 Martinez Underpass\\nPort Stephanie, KS 08685', 'city': 'Hinesville', 'country': 'New Zealand', ...}]\n\n    @pytest.fixture\n    def setup_company_info(setup_test_company):\n    \tgetCompanies=setup_test_company\n    \tcompanyinfo=[]\n    \tfor company in getCompanies:\n>   \t\tgetCompanyInfo=CompanyInfo.objects.create(company=company)\n\n..\\..\\conftest.py:562: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:451: in create\n    obj = self.model(**kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:485: in __init__\n    _setattr(self, field.name, rel_obj)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.models.fields.related_descriptors.ForwardManyToOneDescriptor object at 0x0000020585AE3508>\ninstance = <CompanyInfo: CompanyInfo object (None)>\nvalue = {'active': False, 'address1': '32939 Jefferson Courts Suite 618\\nPort Gabrielview, NM 33273', 'city': 'Fishermouth', 'country': 'Hungary', ...}\n\n    def __set__(self, instance, value):\n        \"\"\"\n        Set the related instance through the forward relation.\n    \n        With the example above, when setting ``child.parent = parent``:\n    \n        - ``self`` is the descriptor managing the ``parent`` attribute\n        - ``instance`` is the ``child`` instance\n        - ``value`` is the ``parent`` instance on the right of the equal sign\n        \"\"\"\n        # An object must be an instance of the related class.\n        if value is not None and not isinstance(value, self.field.remote_field.model._meta.concrete_model):\n            raise ValueError(\n                'Cannot assign \"%r\": \"%s.%s\" must be a \"%s\" instance.' % (\n                    value,\n                    instance._meta.object_name,\n                    self.field.name,\n>                   self.field.remote_field.model._meta.object_name,\n                )\nE               ValueError: Cannot assign \"{'name': 'Momenttext', 'address1': '32939 Jefferson Courts Suite 618\\nPort Gabrielview, NM 33273', 'active': False, 'city': 'Fishermouth', 'state': 'Tennessee', 'country': 'Hungary', 'state_pin_code': '12153', 'partner_name': 'Ashley Greene', 'created_by': <Users: Users object (1)>, 'updated_by': <Users: Users object (1)>}\": \"CompanyInfo.company\" must be a \"Company\" instance.\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\fields\\related_descriptors.py:220: ValueError\n", "test_name": "test_company_info", "rerun": "0"}}, "suite_name": "organization/Test_organization/test_models.py"}}}, "date": "August 24, 2021", "start_time": 1629800640.351844, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "1", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "1"}