{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 12}, "tests": {"0": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E50EF308>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Craig-Mcdonald', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E50EF308>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E50E91F8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Craig-Mcdonald', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': '647e2e0d-4', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '00bdc2bb-5', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E50E91F8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Craig-Mcdonald', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role0]", "rerun": "0"}, "1": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E3DE8AC8>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Hartman, Wu and Garcia', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E3DE8AC8>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3D97948>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Hartman, Wu and Garcia', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': '340ea17a-8', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '6367fedd-f', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3D97948>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Hartman, Wu and Garcia', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role1]", "rerun": "0"}, "2": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E4F795C8>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Buchanan, Wilson and Bates', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E4F795C8>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E50E4438>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Buchanan, Wilson and Bates', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': 'b04e8ed2-9', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': 'ff94d39a-d', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E50E4438>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Buchanan, Wilson and Bates', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role2]", "rerun": "0"}, "3": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E4F23808>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Cummings-Williams', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E4F23808>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E39F7438>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Cummings-Williams', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': 'd0163c4d-b', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': 'fc67952b-a', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E39F7438>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Cummings-Williams', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role3]", "rerun": "0"}, "4": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E3D9FCC8>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Gilbert, Weber and Johnson', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E3D9FCC8>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3E06D38>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Gilbert, Weber and Johnson', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': 'a28ec320-6', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '11d281da-b', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3E06D38>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Gilbert, Weber and Johnson', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role4]", "rerun": "0"}, "5": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E3E50288>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Hobbs-Reyes', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E3E50288>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52ADA68>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Hobbs-Reyes', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': '30a8ff72-6', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '8646b4e6-5', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52ADA68>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Hobbs-Reyes', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role5]", "rerun": "0"}, "6": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E56CCA88>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Hill, Smith and Davis', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E56CCA88>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3E8A8B8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Hill, Smith and Davis', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': 'a09c6aeb-4', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': 'e19099ea-a', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3E8A8B8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Hill, Smith and Davis', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role6]", "rerun": "0"}, "7": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E54A7348>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Santana-Holland', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E54A7348>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52BDB88>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Santana-Holland', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': '46869aed-2', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '301d01ed-c', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52BDB88>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Santana-Holland', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role7]", "rerun": "0"}, "8": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E5414B08>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Tate, Fisher and Harvey', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E5414B08>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3E075E8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Tate, Fisher and Harvey', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': '430b67bb-9', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '50eb82d1-3', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E3E075E8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Tate, Fisher and Harvey', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role8]", "rerun": "0"}, "9": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E4ED04C8>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Saunders, Parsons and Ali', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E4ED04C8>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52BDAF8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Saunders, Parsons and Ali', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': '410014ac-1', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '63de64d5-3', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52BDAF8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Saunders, Parsons and Ali', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role9]", "rerun": "0"}, "10": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E3E96348>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Chapman-Solomon', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E3E96348>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52BDEE8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Chapman-Solomon', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': '352566e2-a', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '289d06fb-3', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E52BDEE8>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Chapman-Solomon', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role10]", "rerun": "0"}, "11": {"status": "ERROR", "message": "self = <django.db.backends.utils.CursorWrapper object at 0x000001C8E55B6448>\nsql = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", ...eated_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)'\nparams = ['Thornton, Lopez and Powers', None, None, None, None, None, ...]\nignored_wrapper_args = (False, {'connection': <django.db.backends.sqlite3.base.DatabaseWrapper object at 0x000001C8E3463C88>, 'cursor': <django.db.backends.utils.CursorWrapper object at 0x000001C8E55B6448>})\n\n    def _execute(self, sql, params, *ignored_wrapper_args):\n        self.db.validate_no_broken_transaction()\n        with self.db.wrap_database_errors:\n            if params is None:\n                # params default might be backend specific.\n                return self.cursor.execute(sql)\n            else:\n>               return self.cursor.execute(sql, params)\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E5531948>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Thornton, Lopez and Powers', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       sqlite3.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n\nThe above exception was the direct cause of the following exception:\n\nsetup_random_user = [{'active': True, 'email': 'testuser1@momenttext.com', 'first_name': 'test', 'hashkey': 'fd2c8e7d-e', ...}, {'active':... ...}, {'active': False, 'email': 'testuser6@momenttext.com', 'first_name': 'test', 'hashkey': '2d0a571c-b', ...}, ...]\n\n    @pytest.fixture\n    def setup_usercompany_role(setup_random_user):\n    \tusers=setup_random_user\n    \n    \t#To list all user\n    \tcompany_admin=Roles.objects.get(id=2)\n    \tproject_admin=Roles.objects.get(id=3)\n    \tuser=Roles.objects.get(id=4)\n    \tcompanies=[fake.company() for x in range(4)]\n    \tfor company in companies:\n>   \t\tgetCompany=Company.objects.create(name=company)\n\n..\\..\\conftest.py:584: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:453: in create\n    obj.save(force_insert=True, using=self.db)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:727: in save\n    force_update=force_update, update_fields=update_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:765: in save_base\n    force_update, using, update_fields,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:868: in _save_table\n    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\base.py:908: in _do_insert\n    using=using, raw=raw,\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\manager.py:85: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\query.py:1270: in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py:1416: in execute_sql\n    cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:66: in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:75: in _execute_with_wrappers\n    return executor(sql, params, many, context)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\utils.py:90: in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\utils.py:84: in _execute\n    return self.cursor.execute(sql, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0x000001C8E5531948>\nquery = 'INSERT INTO \"Company\" (\"name\", \"address1\", \"address2\", \"city\", \"state\", \"country\", \"partner_name\", \"state_pin_code\", \"active\", \"created_at\", \"created_by_id\", \"updated_at\", \"updated_by_id\") VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\nparams = ['Thornton, Lopez and Powers', None, None, None, None, None, ...]\n\n    def execute(self, query, params=None):\n        if params is None:\n            return Database.Cursor.execute(self, query)\n        query = self.convert_query(query)\n>       return Database.Cursor.execute(self, query, params)\nE       django.db.utils.IntegrityError: NOT NULL constraint failed: Company.created_by_id\n\n..\\..\\..\\mmtxt\\lib\\site-packages\\django\\db\\backends\\sqlite3\\base.py:423: IntegrityError\n", "test_name": "test_all_usercompanyrole[user-company-role11]", "rerun": "0"}}, "suite_name": "organization/Test_organization/test_models.py"}}}, "date": "August 24, 2021", "start_time": 1629818428.4148953, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "12", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "12"}